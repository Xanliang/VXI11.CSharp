
//----------------------------------------------------
// The following code was generated by C# CUP v0.1
// 12/27/2009 3:49:01 PM
//----------------------------------------------------

namespace org.acplt.oncrpc.apps.jrpcgen
 {

using System;
using System.Text;
using System.Collections;
using TUVienna.CS_CUP.Runtime;

/** C# CUP v0.1 generated parser.
  * @version 12/27/2009 3:49:01 PM
  */
public class JrpcgenParser : TUVienna.CS_CUP.Runtime.lr_parser {

  /** Default constructor. */
  public JrpcgenParser():base() {;}

  /** Constructor which sets the default scanner. */
  public JrpcgenParser(TUVienna.CS_CUP.Runtime.Scanner s): base(s) {;}

  /** Production table. */
  protected static readonly short[][] _production_table = 
    unpackFromStrings(new string[] {
    "/000/120/000/002/002/004/000/002/003/004/000/002/021" +
    "/002/000/002/021/003/000/002/020/003/000/002/020/004" +
    "/000/002/004/002/000/002/004/003/000/002/005/003/000" +
    "/002/005/004/000/002/006/003/000/002/006/003/000/002" +
    "/006/003/000/002/006/003/000/002/006/003/000/002/007" +
    "/007/000/002/010/010/000/002/011/003/000/002/011/005" +
    "/000/002/012/003/000/002/012/005/000/002/013/010/000" +
    "/002/014/014/000/002/015/003/000/002/015/004/000/002" +
    "/016/005/000/002/016/007/000/002/016/006/000/002/017" +
    "/005/000/002/022/012/000/002/023/003/000/002/023/004" +
    "/000/002/024/012/000/002/025/003/000/002/025/004/000" +
    "/002/026/012/000/002/027/003/000/002/027/003/000/002" +
    "/030/003/000/002/030/004/000/002/030/005/000/002/030" +
    "/006/000/002/031/003/000/002/031/003/000/002/032/003" +
    "/000/002/032/003/000/002/033/003/000/002/033/003/000" +
    "/002/033/004/000/002/033/003/000/002/033/003/000/002" +
    "/033/003/000/002/033/003/000/002/033/003/000/002/033" +
    "/004/000/002/033/004/000/002/033/004/000/002/034/004" +
    "/000/002/034/005/000/002/035/007/000/002/035/007/000" +
    "/002/035/006/000/002/035/007/000/002/035/006/000/002" +
    "/035/004/000/002/035/007/000/002/035/007/000/002/035" +
    "/006/000/002/035/005/000/002/035/003/000/002/036/004" +
    "/000/002/036/003/000/002/036/003/000/002/036/003/000" +
    "/002/036/004/000/002/036/003/000/002/036/003/000/002" +
    "/036/004/000/002/037/003/000/002/037/003" });

  /** Access to production table. */
  public override short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static readonly short[][] _action_table = 
    unpackFromStrings(new string[] {
    "/000/235/000/020/002/ufffb/021/ufffb/023/014/024/011/042" +
    "/005/045/015/046/007/001/002/000/020/002/ufff9/021/ufff9" +
    "/023/ufff9/024/ufff9/042/ufff9/045/ufff9/046/ufff9/001/002/000" +
    "/004/051/225/001/002/000/004/002/224/001/002/000/004" +
    "/051/200/001/002/000/006/002/uffff/021/130/001/002/000" +
    "/044/030/032/031/036/032/031/033/026/034/033/035/046" +
    "/036/025/037/050/040/035/041/044/042/024/043/030/044" +
    "/047/045/042/046/027/047/041/051/043/001/002/000/020" +
    "/002/ufff6/021/ufff6/023/ufff6/024/ufff6/042/ufff6/045/ufff6/046" +
    "/ufff6/001/002/000/020/002/ufffa/021/ufffa/023/014/024/011" +
    "/042/005/045/015/046/007/001/002/000/004/051/116/001" +
    "/002/000/004/051/022/001/002/000/020/002/ufff4/021/ufff4" +
    "/023/ufff4/024/ufff4/042/ufff4/045/ufff4/046/ufff4/001/002/000" +
    "/020/002/ufff7/021/ufff7/023/ufff7/024/ufff7/042/ufff7/045/ufff7" +
    "/046/ufff7/001/002/000/020/002/ufff3/021/ufff3/023/ufff3/024" +
    "/ufff3/042/ufff3/045/ufff3/046/ufff3/001/002/000/020/002/ufff5" +
    "/021/ufff5/023/ufff5/024/ufff5/042/ufff5/045/ufff5/046/ufff5/001" +
    "/002/000/004/013/023/001/002/000/044/030/032/031/036" +
    "/032/031/033/026/034/033/035/046/036/025/037/050/040" +
    "/035/041/044/042/024/043/030/044/047/045/042/046/027" +
    "/047/041/051/043/001/002/000/004/051/115/001/002/000" +
    "/012/005/uffce/010/uffce/012/uffce/051/uffce/001/002/000/012" +
    "/005/uffb8/010/uffb8/012/uffb8/051/uffb8/001/002/000/004/051" +
    "/114/001/002/000/004/051/104/001/002/000/014/005/uffba" +
    "/010/uffba/012/uffba/033/103/051/uffba/001/002/000/006/004" +
    "/uffbc/012/uffbc/001/002/000/014/005/uffb6/010/uffb6/012/uffb6" +
    "/033/102/051/uffb6/001/002/000/004/004/101/001/002/000" +
    "/012/005/uffcc/010/uffcc/012/uffcc/051/uffcc/001/002/000/012" +
    "/005/uffb9/010/uffb9/012/uffb9/051/uffb9/001/002/000/012/005" +
    "/uffd0/010/uffd0/012/uffd0/051/uffd0/001/002/000/046/014/076" +
    "/030/032/031/036/032/031/033/026/034/033/035/046/036" +
    "/025/037/050/040/035/041/044/042/024/043/030/044/047" +
    "/045/042/046/027/047/041/051/043/001/002/000/024/005" +
    "/uffcf/010/uffcf/012/uffcf/031/036/032/031/033/026/034/033" +
    "/035/046/051/uffcf/001/002/000/004/051/073/001/002/000" +
    "/012/005/uffd3/010/uffd3/012/uffd3/051/uffd3/001/002/000/012" +
    "/005/uffd2/010/uffd2/012/uffd2/051/uffd2/001/002/000/006/010" +
    "/062/051/061/001/002/000/014/005/uffb5/010/uffb5/012/uffb5" +
    "/033/060/051/uffb5/001/002/000/004/051/051/001/002/000" +
    "/012/005/uffcd/010/uffcd/012/uffcd/051/uffcd/001/002/000/004" +
    "/017/052/001/002/000/010/020/054/050/056/051/053/001" +
    "/002/000/016/004/uffb2/005/uffb2/006/uffb2/014/uffb2/016/uffb2" +
    "/020/uffb2/001/002/000/006/004/uffc2/012/uffc2/001/002/000" +
    "/004/020/057/001/002/000/016/004/uffb3/005/uffb3/006/uffb3" +
    "/014/uffb3/016/uffb3/020/uffb3/001/002/000/006/004/uffc3/012" +
    "/uffc3/001/002/000/012/005/uffb4/010/uffb4/012/uffb4/051/uffb4" +
    "/001/002/000/012/004/uffc1/012/uffc1/015/064/017/065/001" +
    "/002/000/004/051/063/001/002/000/006/004/uffbd/012/uffbd" +
    "/001/002/000/006/050/056/051/053/001/002/000/010/020" +
    "/066/050/056/051/053/001/002/000/006/004/uffbe/012/uffbe" +
    "/001/002/000/004/020/070/001/002/000/006/004/uffbf/012" +
    "/uffbf/001/002/000/004/016/072/001/002/000/006/004/uffc0" +
    "/012/uffc0/001/002/000/012/005/uffca/010/uffca/012/uffca/051" +
    "/uffca/001/002/000/012/005/uffd1/010/uffd1/012/uffd1/051/uffd1" +
    "/001/002/000/004/004/100/001/002/000/004/004/077/001" +
    "/002/000/020/002/uffec/021/uffec/023/uffec/024/uffec/042/uffec" +
    "/045/uffec/046/uffec/001/002/000/046/014/uffc7/030/uffc7/031" +
    "/uffc7/032/uffc7/033/uffc7/034/uffc7/035/uffc7/036/uffc7/037/uffc7" +
    "/040/uffc7/041/uffc7/042/uffc7/043/uffc7/044/uffc7/045/uffc7/046" +
    "/uffc7/047/uffc7/051/uffc7/001/002/000/046/014/uffc8/030/uffc8" +
    "/031/uffc8/032/uffc8/033/uffc8/034/uffc8/035/uffc8/036/uffc8/037" +
    "/uffc8/040/uffc8/041/uffc8/042/uffc8/043/uffc8/044/uffc8/045/uffc8" +
    "/046/uffc8/047/uffc8/051/uffc8/001/002/000/012/005/uffb7/010" +
    "/uffb7/012/uffb7/051/uffb7/001/002/000/012/005/uffbb/010/uffbb" +
    "/012/uffbb/051/uffbb/001/002/000/006/015/105/017/106/001" +
    "/002/000/006/050/056/051/053/001/002/000/010/020/107" +
    "/050/056/051/053/001/002/000/006/004/uffc4/012/uffc4/001" +
    "/002/000/004/020/111/001/002/000/006/004/uffc5/012/uffc5" +
    "/001/002/000/004/016/113/001/002/000/006/004/uffc6/012" +
    "/uffc6/001/002/000/012/005/uffc9/010/uffc9/012/uffc9/051/uffc9" +
    "/001/002/000/012/005/uffcb/010/uffcb/012/uffcb/051/uffcb/001" +
    "/002/000/004/007/117/001/002/000/006/050/056/051/053" +
    "/001/002/000/004/004/121/001/002/000/020/002/ufff2/021" +
    "/ufff2/023/ufff2/024/ufff2/042/ufff2/045/ufff2/046/ufff2/001/002" +
    "/000/020/002/ufff8/021/ufff8/023/ufff8/024/ufff8/042/ufff8/045" +
    "/ufff8/046/ufff8/001/002/000/004/004/124/001/002/000/020" +
    "/002/uffe5/021/uffe5/023/uffe5/024/uffe5/042/uffe5/045/uffe5/046" +
    "/uffe5/001/002/000/006/002/ufffd/021/ufffd/001/002/000/004" +
    "/002/000/001/002/000/006/002/ufffe/021/130/001/002/000" +
    "/004/051/131/001/002/000/004/013/132/001/002/000/004" +
    "/022/135/001/002/000/006/014/uffe3/022/uffe3/001/002/000" +
    "/006/014/173/022/135/001/002/000/004/051/136/001/002" +
    "/000/004/013/137/001/002/000/042/030/142/031/036/032" +
    "/031/033/026/034/033/035/046/036/025/037/050/040/035" +
    "/041/044/042/024/044/141/045/042/046/027/047/041/051" +
    "/043/001/002/000/004/051/uffd6/001/002/000/010/005/uffd5" +
    "/012/uffd5/051/uffd5/001/002/000/004/051/uffd7/001/002/000" +
    "/004/051/154/001/002/000/010/005/uffd4/012/uffd4/051/uffd4" +
    "/001/002/000/044/014/147/030/142/031/036/032/031/033" +
    "/026/034/033/035/046/036/025/037/050/040/035/041/044" +
    "/042/024/044/141/045/042/046/027/047/041/051/043/001" +
    "/002/000/044/014/uffe0/030/uffe0/031/uffe0/032/uffe0/033/uffe0" +
    "/034/uffe0/035/uffe0/036/uffe0/037/uffe0/040/uffe0/041/uffe0/042" +
    "/uffe0/044/uffe0/045/uffe0/046/uffe0/047/uffe0/051/uffe0/001/002" +
    "/000/004/007/151/001/002/000/044/014/uffdf/030/uffdf/031" +
    "/uffdf/032/uffdf/033/uffdf/034/uffdf/035/uffdf/036/uffdf/037/uffdf" +
    "/040/uffdf/041/uffdf/042/uffdf/044/uffdf/045/uffdf/046/uffdf/047" +
    "/uffdf/051/uffdf/001/002/000/006/050/056/051/053/001/002" +
    "/000/004/004/153/001/002/000/006/014/uffe1/022/uffe1/001" +
    "/002/000/004/011/155/001/002/000/042/030/156/031/036" +
    "/032/031/033/026/034/033/035/046/036/025/037/050/040" +
    "/035/041/044/042/024/044/141/045/042/046/027/047/041" +
    "/051/043/001/002/000/006/005/uffdd/012/uffdd/001/002/000" +
    "/010/005/uffdb/012/uffdb/051/171/001/002/000/006/005/uffdc" +
    "/012/uffdc/001/002/000/006/005/163/012/162/001/002/000" +
    "/004/007/166/001/002/000/040/031/036/032/031/033/026" +
    "/034/033/035/046/036/025/037/050/040/035/041/044/042" +
    "/024/044/141/045/042/046/027/047/041/051/043/001/002" +
    "/000/010/005/uffd9/012/uffd9/051/165/001/002/000/006/005" +
    "/uffd8/012/uffd8/001/002/000/006/050/056/051/053/001/002" +
    "/000/004/004/170/001/002/000/044/014/uffde/030/uffde/031" +
    "/uffde/032/uffde/033/uffde/034/uffde/035/uffde/036/uffde/037/uffde" +
    "/040/uffde/041/uffde/042/uffde/044/uffde/045/uffde/046/uffde/047" +
    "/uffde/051/uffde/001/002/000/006/005/uffda/012/uffda/001/002" +
    "/000/006/014/uffe2/022/uffe2/001/002/000/004/007/174/001" +
    "/002/000/006/050/056/051/053/001/002/000/004/004/176" +
    "/001/002/000/006/002/uffe4/021/uffe4/001/002/000/006/002" +
    "/ufffc/021/ufffc/001/002/000/004/025/201/001/002/000/004" +
    "/011/202/001/002/000/044/030/032/031/036/032/031/033" +
    "/026/034/033/035/046/036/025/037/050/040/035/041/044" +
    "/042/024/043/030/044/047/045/042/046/027/047/041/051" +
    "/043/001/002/000/004/012/204/001/002/000/004/013/205" +
    "/001/002/000/006/026/211/027/207/001/002/000/010/014" +
    "/uffea/026/uffea/027/uffea/001/002/000/004/006/221/001/002" +
    "/000/010/014/217/026/211/027/207/001/002/000/006/050" +
    "/056/051/053/001/002/000/004/006/213/001/002/000/052" +
    "/014/uffe8/026/uffe8/027/uffe8/030/032/031/036/032/031/033" +
    "/026/034/033/035/046/036/025/037/050/040/035/041/044" +
    "/042/024/043/030/044/047/045/042/046/027/047/041/051" +
    "/043/001/002/000/004/004/215/001/002/000/010/014/uffe7" +
    "/026/uffe7/027/uffe7/001/002/000/010/014/uffe9/026/uffe9/027" +
    "/uffe9/001/002/000/004/004/220/001/002/000/020/002/uffeb" +
    "/021/uffeb/023/uffeb/024/uffeb/042/uffeb/045/uffeb/046/uffeb/001" +
    "/002/000/044/030/032/031/036/032/031/033/026/034/033" +
    "/035/046/036/025/037/050/040/035/041/044/042/024/043" +
    "/030/044/047/045/042/046/027/047/041/051/043/001/002" +
    "/000/004/004/223/001/002/000/010/014/uffe6/026/uffe6/027" +
    "/uffe6/001/002/000/004/002/001/001/002/000/004/013/226" +
    "/001/002/000/004/051/227/001/002/000/010/005/uffee/007" +
    "/236/014/uffee/001/002/000/006/005/ufff0/014/ufff0/001/002" +
    "/000/006/005/233/014/232/001/002/000/004/004/235/001" +
    "/002/000/004/051/227/001/002/000/006/005/uffef/014/uffef" +
    "/001/002/000/020/002/ufff1/021/ufff1/023/ufff1/024/ufff1/042" +
    "/ufff1/045/ufff1/046/ufff1/001/002/000/006/050/056/051/053" +
    "/001/002/000/006/005/uffed/014/uffed/001/002" });

  /** Access to parse-action table. */
  public override short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static readonly short[][] _reduce_table = 
    unpackFromStrings(new string[] {
    "/000/235/000/024/003/005/004/007/005/012/006/003/007" +
    "/016/010/011/013/020/014/015/017/017/001/001/000/002" +
    "/001/001/000/002/001/001/000/002/001/001/000/002/001" +
    "/001/000/010/020/126/021/125/022/124/001/001/000/010" +
    "/033/044/035/122/036/036/001/001/000/002/001/001/000" +
    "/016/006/121/007/016/010/011/013/020/014/015/017/017" +
    "/001/001/000/002/001/001/000/002/001/001/000/002/001" +
    "/001/000/002/001/001/000/002/001/001/000/002/001/001" +
    "/000/002/001/001/000/012/033/044/034/037/035/033/036" +
    "/036/001/001/000/002/001/001/000/002/001/001/000/002" +
    "/001/001/000/002/001/001/000/002/001/001/000/002/001" +
    "/001/000/002/001/001/000/002/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/002/001/001/000" +
    "/010/033/044/035/074/036/036/001/001/000/004/036/073" +
    "/001/001/000/002/001/001/000/002/001/001/000/002/001" +
    "/001/000/002/001/001/000/002/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/004/037/054/001" +
    "/001/000/002/001/001/000/002/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/002/001/001/000" +
    "/002/001/001/000/002/001/001/000/002/001/001/000/004" +
    "/037/070/001/001/000/004/037/066/001/001/000/002/001" +
    "/001/000/002/001/001/000/002/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/002/001/001/000" +
    "/002/001/001/000/002/001/001/000/002/001/001/000/002" +
    "/001/001/000/002/001/001/000/002/001/001/000/002/001" +
    "/001/000/002/001/001/000/004/037/111/001/001/000/004" +
    "/037/107/001/001/000/002/001/001/000/002/001/001/000" +
    "/002/001/001/000/002/001/001/000/002/001/001/000/002" +
    "/001/001/000/002/001/001/000/002/001/001/000/004/037" +
    "/117/001/001/000/002/001/001/000/002/001/001/000/002" +
    "/001/001/000/002/001/001/000/002/001/001/000/002/001" +
    "/001/000/002/001/001/000/004/022/176/001/001/000/002" +
    "/001/001/000/002/001/001/000/006/023/133/024/132/001" +
    "/001/000/002/001/001/000/004/024/171/001/001/000/002" +
    "/001/001/000/002/001/001/000/016/025/144/026/145/031" +
    "/142/032/137/033/143/036/036/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/002/001/001/000" +
    "/002/001/001/000/014/026/147/031/142/032/137/033/143" +
    "/036/036/001/001/000/002/001/001/000/002/001/001/000" +
    "/002/001/001/000/004/037/151/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/014/027/160/030" +
    "/157/032/156/033/143/036/036/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/002/001/001/000" +
    "/002/001/001/000/010/032/163/033/143/036/036/001/001" +
    "/000/002/001/001/000/002/001/001/000/004/037/166/001" +
    "/001/000/002/001/001/000/002/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/004/037/174/001" +
    "/001/000/002/001/001/000/002/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/010/033/044/035" +
    "/202/036/036/001/001/000/002/001/001/000/002/001/001" +
    "/000/006/015/207/016/205/001/001/000/002/001/001/000" +
    "/002/001/001/000/004/016/215/001/001/000/004/037/211" +
    "/001/001/000/002/001/001/000/010/033/044/035/213/036" +
    "/036/001/001/000/002/001/001/000/002/001/001/000/002" +
    "/001/001/000/002/001/001/000/002/001/001/000/010/033" +
    "/044/035/221/036/036/001/001/000/002/001/001/000/002" +
    "/001/001/000/002/001/001/000/002/001/001/000/006/011" +
    "/230/012/227/001/001/000/002/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/004/012/233/001" +
    "/001/000/002/001/001/000/002/001/001/000/004/037/236" +
    "/001/001/000/002/001/001" });

  /** Access to <code>reduce_goto</code> table. */
  public override short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP_JrpcgenParser_actions action_obj;

  /** Action encapsulation object initializer. */
  protected override void init_actions()
    {
      action_obj = new CUP_JrpcgenParser_actions(this);
    }

  /** Invoke a user supplied parse action. */
  public override TUVienna.CS_CUP.Runtime.Symbol do_action(
    int                        act_num,
    TUVienna.CS_CUP.Runtime.lr_parser parser,
    System.Collections.Stack            xstack1,
    int                        top)
  {
  mStack CUP_parser_stack= new mStack(xstack1);
    /* call code in generated class */
    return action_obj.CUP_JrpcgenParser_do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public override int start_state() {return 0;}
  /** Indicates start production. */
  public override int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public override int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public override int error_sym() {return 1;}




    public new void report_error(string message, object info) {
        StringBuilder msg = new StringBuilder("jrpcgen: error");
        if (info is Symbol) {
            Symbol s = (Symbol) info;
            msg.Append(" in line ");
            msg.Append(s.left);
        }
        msg.Append(": ");
        msg.Append(message);
        Console.Out.WriteLine(msg);
        throw(new JrpcgenParserException());
    }

    public void report_error(string message, int line) {
        StringBuilder msg = new StringBuilder("jrpcgen: error in line ");
        msg.Append(line);
        msg.Append(": ");
        msg.Append(message);
        Console.Out.WriteLine(msg);
        throw(new JrpcgenParserException());
    }

    public new void syntax_error(Symbol cur_token) {
        StringBuilder msg = new StringBuilder("jrpcgen: syntax error in line ");
        msg.Append(cur_token.left);
        Console.Out.WriteLine(msg);
        throw(new JrpcgenParserException());
    }

    public new void report_fatal_error(string message, object info) {
        report_error(message, info);
        throw(new JrpcgenParserException("Fatal Syntax Error"));
    }


}

/** Cup generated class to encapsulate user supplied action code.*/
public class CUP_JrpcgenParser_actions {
  private JrpcgenParser parser;

  /** Constructor */
  public CUP_JrpcgenParser_actions(JrpcgenParser t_parser) {
    this.parser = t_parser;
  }

  /** Method with the actual generated action code. */
  public   TUVienna.CS_CUP.Runtime.Symbol CUP_JrpcgenParser_do_action(
    int                        CUP_JrpcgenParser_act_num,
    TUVienna.CS_CUP.Runtime.lr_parser CUP_JrpcgenParser_parser,
    System.Collections.Stack            xstack1,
    int                        CUP_JrpcgenParser_top)
    {
      /* Symbol object for return from actions */
      mStack CUP_JrpcgenParser_stack =new mStack(xstack1);
      TUVienna.CS_CUP.Runtime.Symbol CUP_JrpcgenParser_result;

      /* select the action based on the action number */
      switch (CUP_JrpcgenParser_act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // value ::= IDENTIFIER 
            {
              string RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		 RESULT = id; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(29/*value*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // value ::= INTEGER_LITERAL 
            {
              string RESULT = null;
		int litleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int litright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string lit = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		 RESULT = lit; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(29/*value*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // int_types ::= HYPER INT 
            {
              string RESULT = null;
		 RESULT = "long"; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(28/*int_types*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // int_types ::= HYPER 
            {
              string RESULT = null;
		 RESULT = "long"; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(28/*int_types*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // int_types ::= LONG 
            {
              string RESULT = null;
		 RESULT = "int"; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(28/*int_types*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // int_types ::= LONG INT 
            {
              string RESULT = null;
		 RESULT = "int"; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(28/*int_types*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // int_types ::= INT 
            {
              string RESULT = null;
		 RESULT = "int"; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(28/*int_types*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // int_types ::= CHAR 
            {
              string RESULT = null;
		 RESULT = "byte"; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(28/*int_types*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // int_types ::= SHORT 
            {
              string RESULT = null;
		 RESULT = "short"; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(28/*int_types*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // int_types ::= SHORT INT 
            {
              string RESULT = null;
		 RESULT = "short"; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(28/*int_types*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // declaration ::= VOID 
            {
              JrpcgenDeclaration RESULT = null;
		
                RESULT = new JrpcgenDeclaration(null, "void");
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(27/*declaration*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // declaration ::= type_specifier STAR IDENTIFIER 
            {
              JrpcgenDeclaration RESULT = null;
		int typeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left;
		int typeright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).right;
		string type = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).value;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
                RESULT = new JrpcgenDeclaration(
                    id, type, JrpcgenDeclaration.INDIRECTION, null);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(27/*declaration*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // declaration ::= type_specifier IDENTIFIER LANGLE RANGLE 
            {
              JrpcgenDeclaration RESULT = null;
		int typeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).left;
		int typeright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).right;
		string type = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).value;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).value;
		
                RESULT = new JrpcgenDeclaration(
                    id, type, JrpcgenDeclaration.DYNAMICVECTOR, null);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(27/*declaration*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // declaration ::= type_specifier IDENTIFIER LANGLE value RANGLE 
            {
              JrpcgenDeclaration RESULT = null;
		int typeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).left;
		int typeright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).right;
		string type = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).value;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).value;
		int sizeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int sizeright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		string size = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		
                RESULT = new JrpcgenDeclaration(
                    id, type, JrpcgenDeclaration.DYNAMICVECTOR, size);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(27/*declaration*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // declaration ::= type_specifier IDENTIFIER LBRACKET value RBRACKET 
            {
              JrpcgenDeclaration RESULT = null;
		int typeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).left;
		int typeright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).right;
		string type = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).value;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).value;
		int sizeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int sizeright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		string size = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		
               RESULT = new JrpcgenDeclaration(
                   id, type, JrpcgenDeclaration.FIXEDVECTOR, size);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(27/*declaration*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // declaration ::= type_specifier IDENTIFIER 
            {
              JrpcgenDeclaration RESULT = null;
		int typeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int typeright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		string type = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
               RESULT = new JrpcgenDeclaration(id, type);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(27/*declaration*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // declaration ::= STRING IDENTIFIER LANGLE RANGLE 
            {
              JrpcgenDeclaration RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).value;
		
                RESULT = new JrpcgenDeclaration(
                    id, "string", JrpcgenDeclaration.DYNAMICVECTOR, null);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(27/*declaration*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // declaration ::= STRING IDENTIFIER LANGLE value RANGLE 
            {
              JrpcgenDeclaration RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).value;
		int sizeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int sizeright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		string size = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		
                RESULT = new JrpcgenDeclaration(
                    id, "string", JrpcgenDeclaration.DYNAMICVECTOR, size);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(27/*declaration*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // declaration ::= OPAQUE IDENTIFIER LANGLE RANGLE 
            {
              JrpcgenDeclaration RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).value;
		
                // Note: we use the pseudo-type "opaque" here to distinguish
                // real byte arrays from fake byte (char) arrays.
                RESULT = new JrpcgenDeclaration(
                    id, "opaque", JrpcgenDeclaration.DYNAMICVECTOR, null);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(27/*declaration*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // declaration ::= OPAQUE IDENTIFIER LANGLE value RANGLE 
            {
              JrpcgenDeclaration RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).value;
		int sizeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int sizeright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		string size = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		
                // Note: we use the pseudo-type "opaque" here to distinguish
                // real byte arrays from fake byte (char) arrays.
                RESULT = new JrpcgenDeclaration(
                    id, "opaque", JrpcgenDeclaration.DYNAMICVECTOR, size);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(27/*declaration*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // declaration ::= OPAQUE IDENTIFIER LBRACKET value RBRACKET 
            {
              JrpcgenDeclaration RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).value;
		int sizeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int sizeright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		string size = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		
                // Note: we use the pseudo-type "opaque" here to distinguish
                // real byte arrays from fake byte (char) arrays.
                RESULT = new JrpcgenDeclaration(
                    id, "opaque", JrpcgenDeclaration.FIXEDVECTOR, size);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(27/*declaration*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // declarations ::= declarations declaration SEMICOLON 
            {
              ArrayList RESULT = null;
		int declsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left;
		int declsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).right;
		ArrayList decls = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).value;
		int declleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int declright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		JrpcgenDeclaration decl = (JrpcgenDeclaration)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		
               decls.Add(decl);
               RESULT = decls;
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(26/*declarations*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // declarations ::= declaration SEMICOLON 
            {
              ArrayList RESULT = null;
		int declleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int declright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		JrpcgenDeclaration decl = (JrpcgenDeclaration)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		
               RESULT = new ArrayList();
               RESULT.Add(decl);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(26/*declarations*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // type_specifier ::= UNION IDENTIFIER 
            {
              string RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		 RESULT = id; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(25/*type_specifier*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // type_specifier ::= STRUCT IDENTIFIER 
            {
              string RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		 RESULT = id; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(25/*type_specifier*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // type_specifier ::= ENUM IDENTIFIER 
            {
              string RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		 RESULT = id; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(25/*type_specifier*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // type_specifier ::= QUADRUPLE 
            {
              string RESULT = null;
		 RESULT = "double"; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(25/*type_specifier*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // type_specifier ::= DOUBLE 
            {
              string RESULT = null;
		 RESULT = "double"; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(25/*type_specifier*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // type_specifier ::= FLOAT 
            {
              string RESULT = null;
		 RESULT = "float"; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(25/*type_specifier*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // type_specifier ::= UNSIGNED 
            {
              string RESULT = null;
		 RESULT = "int"; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(25/*type_specifier*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // type_specifier ::= int_types 
            {
              string RESULT = null;
		int typeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int typeright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string type = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		 RESULT = type; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(25/*type_specifier*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // type_specifier ::= UNSIGNED int_types 
            {
              string RESULT = null;
		int typeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int typeright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string type = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		 RESULT = type; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(25/*type_specifier*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // type_specifier ::= BOOL 
            {
              string RESULT = null;
		 RESULT = "bool"; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(25/*type_specifier*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // type_specifier ::= IDENTIFIER 
            {
              string RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		 RESULT = id; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(25/*type_specifier*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // type_specifier_incl_string ::= type_specifier 
            {
              string RESULT = null;
		int typeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int typeright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string type = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		 RESULT = type; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(24/*type_specifier_incl_string*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // type_specifier_incl_string ::= STRING 
            {
              string RESULT = null;
		 RESULT = "string"; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(24/*type_specifier_incl_string*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // type_specifier_incl_specials ::= type_specifier_incl_string 
            {
              string RESULT = null;
		int typeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int typeright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string type = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		 RESULT = type; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(23/*type_specifier_incl_specials*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // type_specifier_incl_specials ::= VOID 
            {
              string RESULT = null;
		 RESULT = "void"; 
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(23/*type_specifier_incl_specials*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // argument_list_no_void ::= argument_list COMMA type_specifier_incl_string IDENTIFIER 
            {
              ArrayList RESULT = null;
		int argsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).left;
		int argsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).right;
		ArrayList args = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).value;
		int paramTypeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int paramTyperight = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		string paramType = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		int paramNameleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int paramNameright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string paramName = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
               RESULT = args;
               RESULT.Add(new JrpcgenParamInfo(paramType, paramName));
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(22/*argument_list_no_void*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // argument_list_no_void ::= argument_list COMMA type_specifier_incl_string 
            {
              ArrayList RESULT = null;
		int argsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left;
		int argsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).right;
		ArrayList args = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).value;
		int paramTypeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int paramTyperight = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string paramType = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
               RESULT = args;
               RESULT.Add(new JrpcgenParamInfo(paramType, null));
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(22/*argument_list_no_void*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // argument_list_no_void ::= type_specifier_incl_string IDENTIFIER 
            {
              ArrayList RESULT = null;
		int paramTypeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int paramTyperight = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		string paramType = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		int paramNameleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int paramNameright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string paramName = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
               RESULT = new ArrayList();
               RESULT.Add(new JrpcgenParamInfo(paramType, paramName));
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(22/*argument_list_no_void*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // argument_list_no_void ::= type_specifier_incl_string 
            {
              ArrayList RESULT = null;
		int paramTypeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int paramTyperight = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string paramType = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
               RESULT = new ArrayList();
               RESULT.Add(new JrpcgenParamInfo(paramType, null));
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(22/*argument_list_no_void*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // argument_list ::= argument_list_no_void 
            {
              ArrayList RESULT = null;
		int argsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int argsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		ArrayList args = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
               RESULT = args; // just pass through
               int size = RESULT.Count;
               //
               // All arguments, which are unnamed so far will now get
               // default names.
               //
               for ( int idx = 0; idx < size; ++idx ) {
                   JrpcgenParamInfo paraminfo =
                       (JrpcgenParamInfo) RESULT[idx];
                   if ( paraminfo.parameterName == null ) {
                       paraminfo.parameterName = "arg" + (idx + 1);
                   }
               }
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(21/*argument_list*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // argument_list ::= VOID 
            {
              ArrayList RESULT = null;
		
               RESULT = null; // special case, allows fast tests
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(21/*argument_list*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // procedure_def ::= type_specifier_incl_specials IDENTIFIER LPAREN argument_list RPAREN EQUAL value SEMICOLON 
            {
              JrpcgenProcedureInfo RESULT = null;
		int resultTypeleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-7)).left;
		int resultTyperight = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-7)).right;
		string resultType = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-7)).value;
		int procIdleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-6)).left;
		int procIdright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-6)).right;
		string procId = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-6)).value;
		int argsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).left;
		int argsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).right;
		ArrayList args = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).value;
		int procNumberleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int procNumberright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		string procNumber = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		
               RESULT = new JrpcgenProcedureInfo(procId, procNumber, resultType, args);
               //
               // NOTE: we can not add the identifier for the procedure number
               // to the list of global identifiers yet, as we do not know the
               // version number. This has to be fixed after the embracing
               // version definition was parsed in toto.
               //
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(20/*procedure_def*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-7)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // procedure_defs ::= procedure_defs procedure_def 
            {
              ArrayList RESULT = null;
		int procsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int procsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		ArrayList procs = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		int procleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int procright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		JrpcgenProcedureInfo proc = (JrpcgenProcedureInfo)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
                procs.Add(proc);
                RESULT = procs;
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(19/*procedure_defs*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // procedure_defs ::= procedure_def 
            {
              ArrayList RESULT = null;
		int procleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int procright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		JrpcgenProcedureInfo proc = (JrpcgenProcedureInfo)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
                RESULT = new ArrayList();
                RESULT.Add(proc);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(19/*procedure_defs*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // version_def ::= VERSION IDENTIFIER LBRACE procedure_defs RBRACE EQUAL value SEMICOLON 
            {
              JrpcgenVersionInfo RESULT = null;
		int versIdleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-6)).left;
		int versIdright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-6)).right;
		string versId = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-6)).value;
		int procsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).left;
		int procsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).right;
		ArrayList procs = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).value;
		int versNumberleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int versNumberright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		string versNumber = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		
               JrpcgenConst vers = new JrpcgenConst(versId, versNumber, jrpcgen.baseClassname);
               RESULT = new JrpcgenVersionInfo(versId, versNumber, procs);
               if ( jrpcgen.globalIdentifiers.ContainsKey(versId)) {
                   parser.report_error("version identifier \"" + versId + "\" already defined", versIdleft);
               }
               jrpcgen.globalIdentifiers.Add(versId, vers);
               versNumber = vers.resolveValue();
               if ( versNumber == null ) {
                   parser.report_error("Can not resolve version identifier \"" +
                                      versId + "\" to integer literal", versNumberleft);
               }
               //
               // We also need to fix up the procedure identifiers by appending
               // the version number.
               //
               int size = procs.Count;
               for ( int idx = 0; idx < size; ++idx ) {
                   JrpcgenProcedureInfo procInfo = (JrpcgenProcedureInfo)
                       procs[idx];
                   procInfo.procedureId += "_" + versNumber;
                   JrpcgenConst proc = new JrpcgenConst(procInfo.procedureId,
                                                        procInfo.procedureNumber,
                                                        jrpcgen.baseClassname);
                   if ( jrpcgen.globalIdentifiers.ContainsKey(procInfo.procedureId)) {
                       // FIXME line number
                       parser.report_error("procedure identifier \"" + procInfo.procedureId + "\" already defined", 0);
                   }
                   jrpcgen.globalIdentifiers.Add(procInfo.procedureId, proc);
               }

               if ( jrpcgen.debug ) {
                   Console.Out.WriteLine("VERSION " + versId + " = " + versNumber);
                   for ( int idx = 0; idx < size; ++idx ) {
                       JrpcgenProcedureInfo procInfo = (JrpcgenProcedureInfo)
                           procs[idx];
                       Console.Out.Write("PROCEDURE " + procInfo.resultType + " "
                                          + procInfo.procedureId + "(");
                       if ( procInfo.parameters == null ) {
                           Console.Out.Write("void");
                       } else {
                           for ( int pidx = 0; pidx < procInfo.parameters.Count; ++pidx ) {
                               JrpcgenParamInfo paramInfo = (JrpcgenParamInfo)
                                   procInfo.parameters[pidx];
                               if ( pidx > 0 ) {
                                   Console.Out.Write(",");
                               }
                               Console.Out.Write(paramInfo.parameterType);
                               if ( paramInfo.parameterName != null ) {
                                   Console.Out.Write(" " + paramInfo.parameterName);
                               }
                           }
                       }
                       Console.Out.WriteLine(") = "
                                          + procInfo.procedureNumber);
                   }
               }
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(18/*version_def*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-7)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // version_defs ::= version_defs version_def 
            {
              ArrayList RESULT = null;
		int versionsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int versionsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		ArrayList versions = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		int versionleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int versionright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		JrpcgenVersionInfo version = (JrpcgenVersionInfo)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
                versions.Add(version);
                RESULT = versions;
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(17/*version_defs*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // version_defs ::= version_def 
            {
              ArrayList RESULT = null;
		int versionleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int versionright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		JrpcgenVersionInfo version = (JrpcgenVersionInfo)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
                RESULT = new ArrayList();
                RESULT.Add(version);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(17/*version_defs*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // program_def ::= PROGRAM IDENTIFIER LBRACE version_defs RBRACE EQUAL value SEMICOLON 
            {
              JrpcgenProgramInfo RESULT = null;
		int progIdleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-6)).left;
		int progIdright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-6)).right;
		string progId = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-6)).value;
		int versionsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).left;
		int versionsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).right;
		ArrayList versions = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).value;
		int progNumberleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int progNumberright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		string progNumber = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		
               JrpcgenConst prog = new JrpcgenConst(progId, progNumber, jrpcgen.baseClassname);
               RESULT = new JrpcgenProgramInfo(progId, progNumber, versions);
               if ( jrpcgen.globalIdentifiers.ContainsKey(progId)) {
                   parser.report_error("program identifier \"" + progId + "\" already defined", progIdleft);
               }
               jrpcgen.globalIdentifiers.Add(progId, prog);
               if ( jrpcgen.debug ) {
                   Console.Out.WriteLine("PROGRAM " + progId + " = " + progNumber);
               }
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(16/*program_def*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-7)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // typedef_def ::= TYPEDEF declaration SEMICOLON 
            {
              object RESULT = null;
		int declleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int declright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		JrpcgenDeclaration decl = (JrpcgenDeclaration)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		
               if ( jrpcgen.globalIdentifiers.ContainsKey(decl.identifier)) {
                   parser.report_error("typedef identifier \"" + decl.identifier + "\" already defined", declleft);
               }
               jrpcgen.globalIdentifiers.Add(decl.identifier, decl);
               if ( jrpcgen.debug ) {
                   Console.Out.Write("TYPEDEF ");
                   decl.dump();
               }
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(13/*typedef_def*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // union_case ::= DEFAULT COLON declaration SEMICOLON 
            {
              JrpcgenUnionArm RESULT = null;
		int elementleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int elementright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		JrpcgenDeclaration element = (JrpcgenDeclaration)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		
               RESULT = new JrpcgenUnionArm(null, element);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(12/*union_case*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // union_case ::= CASE value COLON declaration SEMICOLON 
            {
              JrpcgenUnionArm RESULT = null;
		int valleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).left;
		int valright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).right;
		string val = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).value;
		int elementleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int elementright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		JrpcgenDeclaration element = (JrpcgenDeclaration)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		
               RESULT = new JrpcgenUnionArm(val, element);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(12/*union_case*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // union_case ::= CASE value COLON 
            {
              JrpcgenUnionArm RESULT = null;
		int valleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int valright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		string val = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		
               RESULT = new JrpcgenUnionArm(val, null);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(12/*union_case*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // union_cases ::= union_cases union_case 
            {
              ArrayList RESULT = null;
		int armsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int armsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		ArrayList arms = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		int armleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int armright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		JrpcgenUnionArm arm = (JrpcgenUnionArm)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
                arms.Add(arm);
                RESULT = arms;
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(11/*union_cases*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // union_cases ::= union_case 
            {
              ArrayList RESULT = null;
		int armleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int armright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		JrpcgenUnionArm arm = (JrpcgenUnionArm)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
                RESULT = new ArrayList();
                RESULT.Add(arm);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(11/*union_cases*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // union_def ::= UNION IDENTIFIER SWITCH LPAREN declaration RPAREN LBRACE union_cases RBRACE SEMICOLON 
            {
              object RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-8)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-8)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-8)).value;
		int descrimleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-5)).left;
		int descrimright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-5)).right;
		JrpcgenDeclaration descrim = (JrpcgenDeclaration)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-5)).value;
		int elementsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left;
		int elementsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).right;
		ArrayList elements = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).value;
		
               JrpcgenUnion uni = new JrpcgenUnion(id, descrim, elements);
               if ( jrpcgen.globalIdentifiers.ContainsKey(id)) {
                   parser.report_error("union identifier \"" + id + "\" already defined", idleft);
               }
               jrpcgen.globalIdentifiers.Add(id, uni);
               if ( jrpcgen.debug ) {
                   uni.dump();
               }
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(10/*union_def*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-9)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // struct_def ::= STRUCT IDENTIFIER LBRACE declarations RBRACE SEMICOLON 
            {
              object RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).value;
		int elementsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left;
		int elementsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).right;
		ArrayList elements = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).value;
		
               JrpcgenStruct strct = new JrpcgenStruct(id, elements);
               if ( jrpcgen.globalIdentifiers.ContainsKey(id)) {
                   parser.report_error("struct identifier \"" + id + "\" already defined", idleft);
               }
               jrpcgen.globalIdentifiers.Add(id, strct);
               if ( jrpcgen.debug ) {
                   strct.dump();
               }
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(9/*struct_def*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-5)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // enum_element ::= IDENTIFIER EQUAL value 
            {
              JrpcgenConst RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).value;
		int valleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int valright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string val = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
               RESULT = new JrpcgenConst(id, val);
               if ( jrpcgen.globalIdentifiers.ContainsKey(id)) {
                   parser.report_error("identifier \"" + id + "\" already defined", idleft);
               }
               jrpcgen.globalIdentifiers.Add(id, RESULT);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(8/*enum_element*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // enum_element ::= IDENTIFIER 
            {
              JrpcgenConst RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
               //
               // We don't know yet the value, so we don't specify one. The
               // value will be fixed up when the production for the complete
               // enumeration triggers.
               //
               RESULT = new JrpcgenConst(id, null);
               if ( jrpcgen.globalIdentifiers.ContainsKey(id)) {
                   parser.report_error("identifier \"" + id + "\" already defined", idleft);
               }
               jrpcgen.globalIdentifiers.Add(id, RESULT);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(8/*enum_element*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // enum_elements ::= enum_elements COMMA enum_element 
            {
              ArrayList RESULT = null;
		int elementsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left;
		int elementsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).right;
		ArrayList elements = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).value;
		int elleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int elright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		JrpcgenConst el = (JrpcgenConst)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
               //
               // If no specific value has been assigned to this element of
               // an enumeration, increment value of previous element and
               // assign the new value to this element. BTW -- we let the
               // Java compiler do the calculation, so references to
               // other constants by name are valid.
               //
               if ( el.value == null ) {
                   el.value = ((JrpcgenConst)elements[elements.Count - 1]).value
                              + "+1";
               }
               elements.Add(el);
               RESULT = elements;
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(7/*enum_elements*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // enum_elements ::= enum_element 
            {
              ArrayList RESULT = null;
		int elleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int elright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		JrpcgenConst el = (JrpcgenConst)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
               //
               // If no specific value has been assigned to this element of
               // an enumeration, assign zero by default.
               //
               if ( el.value == null ) {
                   el.value = "0";
               }
               RESULT = new ArrayList();
               RESULT.Add(el);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(7/*enum_elements*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // enum_def ::= ENUM IDENTIFIER LBRACE enum_elements RBRACE SEMICOLON 
            {
              object RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).value;
		int elementsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).left;
		int elementsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).right;
		ArrayList elements = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-2)).value;
		
               //
               // Fix up enclosure of enumeration elements, so we can later
               // use a full qualified identifier.
               //
               int size = elements.Count;
               for ( int idx = 0; idx < size; ++idx ) {
                   JrpcgenConst c = (JrpcgenConst) elements[idx];
                   c.enclosure = id;
               }
               JrpcgenEnum type = new JrpcgenEnum(id, elements);
               if ( jrpcgen.globalIdentifiers.ContainsKey(id)) {
                   parser.report_error("enum identifier \"" + id + "\" already defined", idleft);
               }
               jrpcgen.globalIdentifiers.Add(id, type);
               if ( jrpcgen.debug ) {
                   type.dump();
               }
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(6/*enum_def*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-5)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // constant_def ::= CONST IDENTIFIER EQUAL value SEMICOLON 
            {
              object RESULT = null;
		int idleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).left;
		int idright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).right;
		string id = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-3)).value;
		int valueleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int valueright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		string value = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		
               JrpcgenConst type = new JrpcgenConst(id, value, jrpcgen.baseClassname);
               if ( jrpcgen.globalIdentifiers.ContainsKey(id)) {
                   parser.report_error("const identifier \"" + id + "\" already defined", idleft);
               }
               jrpcgen.globalIdentifiers.Add(id, type);
               if ( jrpcgen.debug ) {
                   Console.Out.Write("CONST ");
                   type.dump();
                   Console.Out.WriteLine();
               }
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(5/*constant_def*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // definition ::= typedef_def 
            {
              object RESULT = null;

              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*definition*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // definition ::= union_def 
            {
              object RESULT = null;

              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*definition*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // definition ::= struct_def 
            {
              object RESULT = null;

              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*definition*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // definition ::= enum_def 
            {
              object RESULT = null;

              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*definition*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // definition ::= constant_def 
            {
              object RESULT = null;

              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*definition*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // definitions ::= definitions definition 
            {
              object RESULT = null;

              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(3/*definitions*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // definitions ::= definition 
            {
              object RESULT = null;

              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(3/*definitions*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // definitions_opt ::= definitions 
            {
              object RESULT = null;

              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(2/*definitions_opt*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // definitions_opt ::= 
            {
              object RESULT = null;

              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(2/*definitions_opt*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // program_defs ::= program_defs program_def 
            {
              ArrayList RESULT = null;
		int progDefsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int progDefsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		ArrayList progDefs = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		int progDefleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int progDefright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		JrpcgenProgramInfo progDef = (JrpcgenProgramInfo)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
                progDefs.Add(progDef);
                RESULT = progDefs;
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(14/*program_defs*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // program_defs ::= program_def 
            {
              ArrayList RESULT = null;
		int progDefleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int progDefright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		JrpcgenProgramInfo progDef = (JrpcgenProgramInfo)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
                RESULT = new ArrayList();
                RESULT.Add(progDef);
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(14/*program_defs*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // program_defs_opt ::= program_defs 
            {
              object RESULT = null;
		int progDefsleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left;
		int progDefsright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right;
		ArrayList progDefs = (ArrayList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).value;
		
                jrpcgen.programInfos = progDefs;
            
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(15/*program_defs_opt*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // program_defs_opt ::= 
            {
              object RESULT = null;
		
				jrpcgen.programInfos = new ArrayList();
			
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(15/*program_defs_opt*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // compilation_unit ::= definitions_opt program_defs_opt 
            {
              object RESULT = null;

              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(1/*compilation_unit*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          return CUP_JrpcgenParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= compilation_unit EOF 
            {
              object RESULT = null;
		int start_valleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left;
		int start_valright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).right;
		object start_val = (object)((TUVienna.CS_CUP.Runtime.Symbol) CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).value;
		RESULT = start_val;
              CUP_JrpcgenParser_result = new TUVienna.CS_CUP.Runtime.Symbol(0/*$START*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_JrpcgenParser_stack.elementAt(CUP_JrpcgenParser_top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP_JrpcgenParser_parser.done_parsing();
          return CUP_JrpcgenParser_result;

          /* . . . . . .*/
          default:
            throw new System.Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

}
